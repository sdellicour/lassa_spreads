library(seraphim)
library(lubridate)
library(seraphim)#
library(lubridate)#
#
# 1. Preparation of LASV sequences#
# 2. Preliminary phylogenetic analyses#
# 3. Temporal signal analyses#
# 4. Continuous phylogeographic analyses#
# 5. Generating dispersal history graphs#
# 6. Estimating dispersal statistics#
# 7. Post-hoc landscape phylogeography#
# 8. Prepration of skygrid-GLM covariates#
# 9. Analysis of skygrid-GLM analyses#
# 10. Species distribution modelling#
#
wd = getwd()#
wd1 = "01_sequences_preparation"wd1 = "02_preliminary_BEAST_runs"wd1 = "03_temporal_signal_analyses"wd1 = "04_RRW_phylogeography"wd1 = "05_dispersal_history_graphs"wd1 = "06_dispersal_stat_estimations"wd1 = "07_all_seraphim_analyses"wd1 = "08_covariates_preparation"wd1 = "09_skygrid_GLM_analyses"wd1 = "10_SDM_analyses_host_virus"
library(diagram)#
library(dismo)#
library(gbm)#
library(geosphere)#
library(lubridate)#
library(ncdf4)#
library(pgirmess)#
library(seraphim)#
library(seqinr)#
library(vioplot)#
#
# 1. Preparation of LASV sequences#
# 2. Preliminary phylogenetic analyses#
# 3. Temporal signal analyses#
# 4. Continuous phylogeographic analyses#
# 5. Generating dispersal history graphs#
# 6. Estimating dispersal statistics#
# 7. Post-hoc landscape phylogeography#
# 8. Prepration of skygrid-GLM covariates#
# 9. Analysis of skygrid-GLM analyses#
# 10. Species distribution modelling#
#
wd = getwd()#
wd1 = "01_sequences_preparation"wd2 = "02_preliminary_BEAST_runs"wd3 = "03_temporal_signal_analyses"wd4 = "04_RRW_phylogeography"wd5 = "05_dispersal_history_graphs"wd6 = "06_dispersal_stat_estimations"wd7 = "07_all_seraphim_analyses"wd8 = "08_covariates_preparation"wd9 = "09_skygrid_GLM_analyses"wd10 = "10_SDM_analyses_host_virus"
setwd(paste(wd,wd10,sep="/"))
nc = nc_open("LUHv2_land_use_states.nc")
setwd(paste(wd,wd8,sep="/"))
nc = nc_open("LUHv2_land_use_states.nc")
nc
ncvar_get(nc,"time")
ncvar_get(nc,"time")
ncvar_get(nc,"lon")
ncvar_get(nc,"lat")
ncvar_get(nc,"time")
nc
times = ncvar_get(nc,"time"); years = times+850
times = ncvar_get(nc,"time"); years = times+850
selected_years = c(1901:2005)#
xMin = -16; xMax = 16; yMin = 3; yMax = 15#
times = ncvar_get(nc,"time"); years = times+850#
lon = ncvar_get(nc,"lon"); lat = ncvar_get(nc,"lat")#
indices1 = which((lon>xMin)&(lon<xMax))#
indices2 = which((lat>yMin)&(lat<yMax))#
lon = lon[indices1]; lat = lat[indices2]
names = ncvar_get(nc,"standard_name")
str(nc)
length(nc$var)
nc$var
nc$var$long_name
nc$var$long_names
str(nc$var)
nc$var$longnames
nc$var[[i]]$longnames
i=1
nc$var[[i]]$longnames
nc$var[[i]]$primf$longnames
nc$var[[i]]$primf
nc$var[[i]]$primf
nc$var[[i]]$primf
nc$var[[i]]$primf
nc$var[[i]]$primf
nc$var[[i]]
str(nc$var[[i]])
nc$var[[i]][[1]]$longnames
nc$var[[i]]$longnames
nc$var[[i]][[1]]
nc$var[[i]][[2]]
nc$var[[i]][[3]]
nc$var[[i]][[9]]
nc = nc_open("LUHv2_land_use_states.nc")#
xMin = -16; xMax = 16; yMin = 3; yMax = 15#
times = ncvar_get(nc,"time"); years = times+850#
lon = ncvar_get(nc,"lon"); lat = ncvar_get(nc,"lat")#
indices1 = which((lon>xMin)&(lon<xMax))#
indices2 = which((lat>yMin)&(lat<yMax))#
lon = lon[indices1]; lat = lat[indices2]#
for (i in 1:length(nc$var))#
	{#
		if (i == 1) names = nc$var[[i]][[9]]#
		if (i >= 2) names = c(names, nc$var[[i]][[9]])#
	}
names
curves_list = list(); selected_years = c(1901:2005); variable_names = c("crops","pasture","urban land",#
	"forested primary land","non-forested primary land","potentially forested secundary land","potentially non-forested secondary land")#
for (i in 1:length(variables))#
	{				   #
		indices = which(grepl(variables[i],names))#
		if (variables[i] == "pasture") indices = c(indices, which(grepl("rangeland",names)))#
		print(indices)#
	}
curves_list = list(); selected_years = c(1901:2005); variable_names = c("crops","pasture","urban land",#
	"forested primary land","non-forested primary land","potentially forested secundary land","potentially non-forested secondary land")#
for (i in 1:length(variables))#
	{				   #
		indices = which(grepl(variable_names[i],names))#
		if (variable_names[i] == "pasture") indices = c(indices, which(grepl("rangeland",names)))#
		print(indices)#
	}
curves_list = list(); selected_years = c(1901:2005); variable_names = c("crops","pasture","urban land",#
	"forested primary land","non-forested primary land","potentially forested secundary land","potentially non-forested secondary land")#
for (i in 1:length(variable_names))#
	{				   #
		indices = which(grepl(variable_names[i],names))#
		if (variable_names[i] == "pasture") indices = c(indices, which(grepl("rangeland",names)))#
		print(indices)#
	}
names
variable_names
curves_list = list(); selected_years = c(1901:2005); variable_names = c("crops","pasture","urban land",#
	"forested primary land","non-forested primary land","potentially forested secondary land","potentially non-forested secondary land")#
for (i in 1:length(variable_names))#
	{#
		indices = which(names==variable_names[i])#
		if (length(indices) == 0) indices = which(grepl(variable_names[i],names))#
		if (variable_names[i] == "pasture") indices = c(indices, which(grepl("rangeland",names)))#
		print(indices)#
	}
for (i in 1:length(nc$var))#
	{#
		if (i == 1) names = nc$var[[i]][[9]]#
		if (i >= 2) names = c(names, nc$var[[i]][[9]])#
		if (i == 1) codes = nc$var[[i]][[2]]#
		if (i >= 2) codes = c(codes, nc$var[[i]][[2]])#
	}
codes
years
for (j in 1:length(indices)) variables[[j]] = ncvar_get(nc,codes[indices[j]])
indices
variables
variables = list()
length(indices)
ncvar_get(nc,codes[indices[j]])
indices[j]]
indices[j]
codes
codes[indices[j]]
nc
for (j in 1:length(indices)) variables[[j]] = ncvar_get(nc,codes[indices[j]])[indices1,indices2,]
tmp=ncvar_get(nc,1Â°
tmp=ncvar_get(nc,1)
tmp=ncvar_get(nc,codes[1])
?ncvar_get
which(years=1901)
which(years==1901)
years
times[which(years==1901)]
for (j in 1:length(indices)) variables[[j]] = ncvar_get(nc,varid=codes[indices[j]],start=c(1,1,1,times[which(years==1901)]))
start=c(1,1,1,times[which(years==1901)])
start
for (j in 1:length(indices)) variables[[j]] = ncvar_get(nc,varid=codes[indices[j]],start=c(1,1,times[which(years==1901)]))
variables
indices = which(names==variable_names[i]); variables1 = list(); variables2 = list()#
		if (length(indices) == 0) indices = which(grepl(variable_names[i],names))#
		if (variable_names[i] == "pasture") indices = c(indices, which(grepl("rangeland",names)))#
		for (j in 1:length(indices))#
			{#
				variables1[[j]] = ncvar_get(nc,varid=codes[indices[j]],start=c(1,1,times[which(years==selected_years[1])]))#
			}#
		for (j in 1:length(variables))#
			{#
				variable1 = variables1[[j]][indices1,indices2,]; variable2 = c()#
				for (k in 1:dim(variable1)[1])#
					{#
						for (l in 1:dim(variable1)[2])#
							{#
								row = cbind(lon[k],latli],t(variable1[k,l,]))#
								variable2 = rbind(variable2, row)#
							}#
					}#
				variables2[[j]] = variable2#
			}
i=1
indices = which(names==variable_names[i]); variables1 = list(); variables2 = list()#
		if (length(indices) == 0) indices = which(grepl(variable_names[i],names))#
		if (variable_names[i] == "pasture") indices = c(indices, which(grepl("rangeland",names)))
for (j in 1:length(indices))#
			{#
				variables1[[j]] = ncvar_get(nc,varid=codes[indices[j]],start=c(1,1,times[which(years==selected_years[1])]))#
			}
j
length(indices)
j=1
variables1
length(variables1)
variable1 = variables1[[j]][indices1,indices2,]; variable2 = c()
for (k in 1:dim(variable1)[1])#
					{#
						for (l in 1:dim(variable1)[2])#
							{#
								row = cbind(lon[k],latli],t(variable1[k,l,]))#
								variable2 = rbind(variable2, row)#
							}#
					}
variable1 = variables1[[j]][indices1,indices2,]; variable2 = c()#
				for (k in 1:dim(variable1)[1])#
					{#
						for (l in 1:dim(variable1)[2])#
							{#
								row = cbind(lon[k],lat[l],t(variable1[k,l,]))#
								variable2 = rbind(variable2, row)#
							}#
					}#
				variables2[[j]] = variable2
for (j in 1:length(variables1))#
			{#
				variable1 = variables1[[j]][indices1,indices2,]; variable2 = c()#
				for (k in 1:dim(variable1)[1])#
					{#
						for (l in 1:dim(variable1)[2])#
							{#
								row = cbind(lon[k],lat[l],t(variable1[k,l,]))#
								variable2 = rbind(variable2, row)#
							}#
					}#
				variables2[[j]] = variable2#
			}
variable2
row
variable3 = variables2[[1]]#
		if (length(variables2) > 1)#
			{#
				for (j in 2:length(variables2))#
					{#
						variable3[,3:dim(variable3)[2]] = variable3[,3:dim(variable3)[2]]+variables2[[j]][,3:dim(variables2[[j]])[2]]#
					}#
			}
analyses = c("LASV2_MRU_segL","LASV2_MRU_segS","LASV2_NGA_segL","LASV2_NGA_segS")
variables_abbreviations = c("croplands","pasture","urbanArea","primaryForest","primaryNonF","secondaryForest","secondaryNonF")#
variable_names = c("crops","pasture","urban land","forested primary land","non-forested primary land",#
				   "potentially forested secondary land","potentially non-forested secondary land")
variable_abbreviations = c("croplands","pasture","urbanArea","primaryForest","primaryNonF","secondaryForest","secondaryNonF")
variable_codes = c("croplands","pasture","urbanArea","primaryForest","primaryNonF","secondaryForest","secondaryNonF")
cbind(variable_codes, variable_names)
variable_codes = c("croplands","pastures","urbanAreas","primaryForest","primaryNonF","secondaryForest","secondaryNonF")#
variable_names = c("crops","pasture","urban land","forested primary land","non-forested primary land",#
				   "potentially forested secondary land","potentially non-forested secondary land")
setwd(paste(wd,wd10,sep="/"))
setwd(paste(wd,wd10,sep="/"))#
#
	# 10.1. Preparation of environmental rasters#
#
		# Source: http://luh.umd.edu/data.shtml; see also Lawrence et al. (2016, Geosci. Model Dev.)#
#
envVariableNames = read.csv("Environmental_rasters/LC_vars.csv")[,2]#
fileName = "Environmental_rasters/Historical/GFDL-ESM2M/landcover_historical_annual_1986_2005_timmean.nc4"#
land_cover = nc_open(fileName); varNames = names(land_cover$var); land_covers = list(); cols = list()#
for (i in 2:13) land_covers[[i-1]] = brick(fileName, varname=varNames[i])#
for (i in 1:length(land_covers))#
	{#
		names(land_covers[[i]]) = varNames[i+1]#
		cols[[i]] = colorRampPalette(brewer.pal(9,"YlGn"))(120)[11:110]#
		if (i == 1)#
			{#
				r_global = land_covers[[1]]#
			}	else		{#
				r_global[] = r_global[]+land_covers[[i]][]	#
			}#
	}#
if (!file.exists("Land_cover_rasters.pdf"))	#
	{#
		pdf("Land_cover_rasters.pdf", width=7.5, height=5.0); par(mfrow=c(4,3), oma=c(1.5,2.0,1,0.5), mar=c(0,0,0,0), mgp=c(1,0.2,0), lwd=0.2)#
		for (i in 1:12)#
			{#
				plot(land_covers[[i]], bty="n", box=F, axes=F, legend=F, col=c("gray90",cols[[i]]), colNA="white")#
				plot(land_covers[[i]], legend.only=T, add=T, col=cols[[i]], legend.width=0.5, legend.shrink=0.3, smallplot=c(0.09,0.105,0.14,0.49), adj=3,#
					 axis.args=list(cex.axis=0.6, lwd=0, lwd.tick=0.2, col.tick="gray30", tck=-0.8, col="gray30", col.axis="gray30", line=0, mgp=c(0,0.4,0)), alpha=1, side=3)#
				mtext(envVariableNames[i], side=1, adj=0.5, line=-1.8, at=40, cex=0.55, font=1, col="gray30")#
			}#
		dev.off()#
	}#
mask = raster("Environmental_rasters/Mask.nc4")#
nc_open("Environmental_rasters/Historical/GFDL-ESM2M/population_histsoc_0p5deg_annual_1986_2005_timmean.nc4")#
nc_open("Environmental_rasters/Historical/GFDL-ESM2M/tas_day_GFDL-ESM2M_historical_r1i1p1_EWEMBI_1986_2005_timmean.nc4")#
nc_open("Environmental_rasters/Historical/GFDL-ESM2M/pr_day_GFDL-ESM2M_historical_r1i1p1_EWEMBI_1986_2005_timmean.nc4")#
population = raster("Environmental_rasters/Historical/GFDL-ESM2M/population_histsoc_0p5deg_annual_1986_2005_timmean.nc4")#
temperature = raster("Environmental_rasters/Historical/GFDL-ESM2M/tas_day_GFDL-ESM2M_historical_r1i1p1_EWEMBI_1986_2005_timmean.nc4")#
precipitation = raster("Environmental_rasters/Historical/GFDL-ESM2M/pr_day_GFDL-ESM2M_historical_r1i1p1_EWEMBI_1986_2005_timmean.nc4")#
population[is.na(mask[])] = NA; # unit: number of people # plot(population)#
temperature[is.na(mask[])] = NA; # unit: K (Kelvin, Â°C+273.15) # plot(temperature)#
precipitation[is.na(mask[])] = NA; # unit: kg/m2/second # plot(precipitation)
land_covers
setwd(wd7)
wd7
land_covers
names(land_cover$var)
envVariableNames
setwd(paste(wd,wd7,sep="/"))
!file.exists("Environmental_files/LUH2_croplands.asc")
variable_codes = c("croplands","pastures","urbanAreas","primaryForest","primaryNonF","secondaryForest","secondaryNonF")#
		variable_names = c("crops","pasture","urban land","forested primary land","non-forested primary land",#
				   		   "potentially forested secondary land","potentially non-forested secondary land")
